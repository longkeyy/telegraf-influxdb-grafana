# Read metrics about CPU usage
[[inputs.cpu]]
  percpu = false
  totalcpu = true
  fieldpass = [ "usage*" ]
  name_suffix = "_vm"

# Read metrics about disk usagee
[[inputs.disk]]
  fielddrop = [ "inodes*" ]
  mount_points=["/"]
  name_suffix = "_vm"

# Read metrics about network usage
[[inputs.net]]
  interfaces = [ "eth0" ]
  fielddrop = [ "icmp*", "ip*", "tcp*", "udp*" ]
  name_suffix = "_vm"

# Read metrics about memory usage
[[inputs.mem]]
  name_suffix = "_vm"

# Read metrics about swap memory usage
[[inputs.swap]]
  name_suffix = "_vm"

# Read metrics about system load & uptime
[[inputs.system]]
  name_suffix = "_vm"

# Read metrics from docker socket api
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  container_names = []
  name_suffix = "_docker"

[[inputs.exec]]
     commands = ["nvidia-smi --format=csv,noheader,nounits --query-gpu=memory.total"]
     name_override = "gpu_memory"
     data_format = "value"
     data_type = "integer"
     name_suffix = "_nvidia"

[[inputs.exec]]
     commands = ["nvidia-smi --format=csv,noheader,nounits --query-gpu=memory.used"]
     name_override = "gpu_memory_used"
     data_format = "value"
     data_type = "integer"
     name_suffix = "_nvidia"

[[inputs.exec]]
     commands = ["nvidia-smi --format=csv,noheader,nounits --query-gpu=utilization.gpu"]
     name_override = "gpu_used"
     data_format = "value"
     data_type = "float"
     name_suffix = "_nvidia"

[[outputs.influxdb]]
  database = "vm_metrics"
  urls = ["http://localhost:8086"]
  namepass = ["*_vm"]

[[outputs.influxdb]]
  database = "docker_metrics"
  urls = ["http://localhost:8086"]
  namepass = ["*_docker"]

[[outputs.influxdb]]
  database = "nvidia_metrics"
  urls = ["http://localhost:8086"]
  namepass = ["*_nvidia"]

